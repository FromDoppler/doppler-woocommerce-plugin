/**
* Admin styles for Doppler for WooCommerce
*/
.dplr_settings .dplr-tab-content #dplrwoo-form-list {
  max-width: 600px; }

.dplr_settings .dplr-tab-content #dplrwoo-form-list-new input[type="text"] {
  width: 200px; }

/**
* Settings
*/
/*
.doppler-woo-settings{

  font-family: "Proxima Nova Rg", arial;

  h2.main-title{
    margin-bottom: 15px;
  }

  font-size: $main-font-size;

  .small-text{
    font-size: $small-font-size;
  }

  .d-none{
    display: none;
  }

  hr{
    margin-top: 15px;
    margin-bottom: 15px;
  }

  a{
    color: $text-green;
    &:hover{
      color: $text-dark-green;
    }
    &.text-dark-red{
      color: $dark-red;
    }
    &.nav-tab{
      color: #555;
    }
  }

  .w-100{
    width: 100%;
  }

  .mt-30{
    margin-top: 30px;
  }

  .text-right{
    text-align: right;
  }

  .text-red, .ev-error{
    color: $red;
  }
  
  .text-dark-green{
    color: $text-dark-green;
  }

  .pointer{
    cursor: pointer;
  }
  
  .dplr-tab-content{
    max-width: $content-width;
    margin: auto;
  }

  .dplrwoo-button{
      cursor: pointer;
      margin-top: 15px;
      background-color: $bggreen;
      line-height: 40px;
      padding-left: 30px;
      padding-right: 30px;
      border: 0px;
      box-shadow: none;
      text-shadow: none;
      color: #fff;
      border-radius: 3px;
      @include transition(background-color .5s);
      &:hover{
        background-color: $text-dark-green;
      }
    &.dplrwoo-button--rounded{
      border-radius: 100px;
    }
  }
  
  h2.nav-tab-wrapper{
    margin-bottom: 30px;
  }

  .dplrwoo-loading{
    max-width: 500px;
    min-height: 200px;
    background-image: url('../img/loading.gif');
    background-repeat: no-repeat;
    background-position: 50% 50%;
  }

  img.doing-synch{
    position: relative;
    top: 3px;
    margin-left: 10px;
    opacity: 0.9;
    @include transition(opacity .5s);
  }
  .doing-synch{
    display: none;
  }

  .synch-ok{
    position: relative;
    top: -2px;
    opacity: 0;
  }

  a#btn-synch{
    line-height:30px;
  }

  .connected-status{
    p{
      font-size: 15px;
    }
  }

  table.grid{
  
    border-spacing: 0;
    background: none repeat scroll 0 0 #fff;
    width: 100%;

    thead{
      margin-bottom:10px;
      tr{
        th{
          background: $doppler-grey-bg;
          color: #fff;
          font-size: 13px;
          height: 40px;
          text-align: left;
          padding-left: 10px;
          vertical-align: middle;
        }
      }
    }
    tr{
      th,td{
        border-bottom: 1px solid #e8e8e8;
        color: $grey;
        font-size: $small-font-size;
        height: 39px;
        line-height: 21px;
        padding: 0 15px 0 15px;
        vertical-align: middle;
        white-space: nowrap;
        text-align: left;
        select{
          width: 100%;
        }
        &.text-right{
          text-align:right;
        }
      }
    }
    &.row-highlight{
      tbody{
        tr{
          &:hover{
            background-color: $yellow-hightlight;
          }
        }
      }
    }
    &.tbl--mapping{
      margin-top: 30px;
      &:first-child{
        margin-top: 0px;
      }
      tbody{
        tr{
          &:first-child{
            td{
              padding-top: 10px;
            }
          }
        }
      }
    }
  }

  #dplrwoo-form-connect,
  #dplrwoo-form-disconnect{
    width: 500px;
    margin: auto;
    table{
      th{
        width: 20%;
      }
    }
    input[type="email"],
    input[type="text"]{
      width:100%;
    }
  }

  #dplrwoo-crud{

    #dplrwoo-form-list-crud{
      label{
        display: block;
        font-weight: 700;
      }
      .tbl{
        margin-top:30px;
      }
    }

    .dplrwoo-loading{
      display: none;
    }
    
    #dprwoo-tbl-lists{
      a{
        cursor: pointer;
      }
      tr{
        &.deleting{
          pointer-events: none;
          opacity: 0.6;
          a{
            visibility:hidden;
            &:after{
              background-image: url('../img/loading.gif');
              background-repeat: no-repeat;
              content: '';
              height: 18px;
              margin-top: -18px;
              visibility: visible;
              display:block;
            }
          }
        }
      }
    }

    &.loading{
      form{
        button, input{
          pointer-events: none;
        }
      }
      .dplrwoo-loading{
        display: block;
      }
      #dprwoo-tbl-lists{
        display: none;
      }
    }

  }

  form{
    input[type="text"], input[type="url"], input[type="email"], textarea, select{
      box-sizing: border-box;
      background-color: #fff;
      border: 1px solid #d3d3d3;
      border-radius: 3px;
      box-sizing: border-box;
      color: $doppler-grey;
      font-family: inherit;
      font-size: 15px;
      height: 42px;
      padding: 10px;
      position: relative;
      box-shadow: none;
    }
    textarea{
      height: initial;
    }
  }
    
}

/**
* Media Queries
*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
